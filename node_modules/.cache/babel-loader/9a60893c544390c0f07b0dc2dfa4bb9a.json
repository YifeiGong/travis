{"ast":null,"code":"import _slicedToArray from \"/Users/fayegong/Documents/GitHub/travis/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fayegong/Documents/GitHub/travis/src/components/CourseList.js\";\nimport React, { useState } from 'react';\nimport \"rbx/index.css\";\nimport { Button } from \"rbx\";\nimport Course from './Course';\nconst terms = {\n  F: 'Fall',\n  W: 'Winter',\n  S: 'Spring'\n};\n\nconst getCourseTerm = course => terms[course.id.charAt(0)];\n\nconst buttonState = selected => selected ? \"success\" : null;\n\nconst TermSelector = ({\n  state\n}) => React.createElement(Button.Group, {\n  hasAddons: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, Object.values(terms).map(value => React.createElement(Button, {\n  key: value,\n  color: buttonState(value === state.term),\n  onClick: () => state.setTerm(value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, value)));\n\nconst useSelection = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selected = _useState2[0],\n        setSelected = _useState2[1];\n\n  const toggle = x => {\n    setSelected(selected.includes(x) ? selected.filter(y => y !== x) : [x].concat(selected));\n  };\n\n  return [selected, toggle];\n};\n\nconst CourseList = ({\n  courses\n}) => {\n  const _useState3 = useState('Fall'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        term = _useState4[0],\n        setTerm = _useState4[1];\n\n  const _useSelection = useSelection(),\n        _useSelection2 = _slicedToArray(_useSelection, 2),\n        selected = _useSelection2[0],\n        toggle = _useSelection2[1];\n\n  const termCourses = courses.filter(course => term === getCourseTerm(course));\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TermSelector, {\n    state: {\n      term,\n      setTerm\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Button.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, termCourses.map(course => React.createElement(Course, {\n    key: course.id,\n    course: course,\n    state: {\n      selected,\n      toggle\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n};\n\nexport default CourseList;","map":{"version":3,"sources":["/Users/fayegong/Documents/GitHub/travis/src/components/CourseList.js"],"names":["React","useState","Button","Course","terms","F","W","S","getCourseTerm","course","id","charAt","buttonState","selected","TermSelector","state","Object","values","map","value","term","setTerm","useSelection","setSelected","toggle","x","includes","filter","y","concat","CourseList","courses","termCourses"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,KAAK,GAAG;AAAEC,EAAAA,CAAC,EAAE,MAAL;AAAaC,EAAAA,CAAC,EAAE,QAAhB;AAA0BC,EAAAA,CAAC,EAAE;AAA7B,CAAd;;AAEA,MAAMC,aAAa,GAAGC,MAAM,IAC1BL,KAAK,CAACK,MAAM,CAACC,EAAP,CAAUC,MAAV,CAAiB,CAAjB,CAAD,CADP;;AAIA,MAAMC,WAAW,GAAGC,QAAQ,IAC1BA,QAAQ,eAAe,IADzB;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACnB,oBAAC,MAAD,CAAQ,KAAR;AAAc,EAAA,SAAS,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,MAAM,CAACC,MAAP,CAAcb,KAAd,EACEc,GADF,CACMC,KAAK,IACR,oBAAC,MAAD;AAAQ,EAAA,GAAG,EAAEA,KAAb;AACE,EAAA,KAAK,EAAEP,WAAW,CAACO,KAAK,KAAKJ,KAAK,CAACK,IAAjB,CADpB;AAEE,EAAA,OAAO,EAAE,MAAML,KAAK,CAACM,OAAN,CAAcF,KAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIGA,KAJH,CAFH,CADH,CADF;;AAeA,MAAMG,YAAY,GAAG,MAAM;AAAA,oBACOrB,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QAClBY,QADkB;AAAA,QACRU,WADQ;;AAEzB,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpBF,IAAAA,WAAW,CAACV,QAAQ,CAACa,QAAT,CAAkBD,CAAlB,IAAuBZ,QAAQ,CAACc,MAAT,CAAgBC,CAAC,IAAIA,CAAC,KAAKH,CAA3B,CAAvB,GAAuD,CAACA,CAAD,EAAII,MAAJ,CAAWhB,QAAX,CAAxD,CAAX;AACD,GAFD;;AAGA,SAAO,CAAEA,QAAF,EAAYW,MAAZ,CAAP;AACD,CAND;;AAQA,MAAMM,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,qBACV9B,QAAQ,CAAC,MAAD,CADE;AAAA;AAAA,QAC3BmB,IAD2B;AAAA,QACrBC,OADqB;;AAAA,wBAEPC,YAAY,EAFL;AAAA;AAAA,QAE3BT,QAF2B;AAAA,QAEjBW,MAFiB;;AAGlC,QAAMQ,WAAW,GAAGD,OAAO,CAACJ,MAAR,CAAelB,MAAM,IAAIW,IAAI,KAAKZ,aAAa,CAACC,MAAD,CAA/C,CAApB;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAG;AAAEW,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMW,WAAW,CAACd,GAAZ,CAAgBT,MAAM,IACtB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAGA,MAAM,CAACC,EAArB;AAA0B,IAAA,MAAM,EAAGD,MAAnC;AAA4C,IAAA,KAAK,EAAG;AAAEI,MAAAA,QAAF;AAAYW,MAAAA;AAAZ,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADN,CAFF,CADF;AASD,CAdD;;AAgBA,eAAeM,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport \"rbx/index.css\";\nimport { Button } from \"rbx\";\nimport Course from './Course';\n\nconst terms = { F: 'Fall', W: 'Winter', S: 'Spring'};\n\nconst getCourseTerm = course => (\n  terms[course.id.charAt(0)]\n);\n\nconst buttonState = selected => (\n  selected ? `success` : null\n)\n\nconst TermSelector = ({ state }) => (\n  <Button.Group hasAddons>\n    {Object.values(terms)\n      .map(value =>\n        <Button key={value}\n          color={buttonState(value === state.term)}\n          onClick={() => state.setTerm(value)}\n        >\n          {value}\n        </Button>\n      )\n    }\n  </Button.Group>\n);\n\nconst useSelection = () => {\n  const [selected, setSelected] = useState([]);\n  const toggle = (x) => {\n    setSelected(selected.includes(x) ? selected.filter(y => y !== x) : [x].concat(selected))\n  };\n  return [ selected, toggle ];\n};\n\nconst CourseList = ({ courses }) => {\n  const [term, setTerm] = useState('Fall');\n  const [selected, toggle] = useSelection();\n  const termCourses = courses.filter(course => term === getCourseTerm(course));\n  \n  return (\n    <React.Fragment>\n      <TermSelector state={ { term, setTerm } } />\n      <Button.Group>\n          { termCourses.map(course =>\n            <Course key={ course.id } course={ course } state={ { selected, toggle } } />) }\n      </Button.Group>\n    </React.Fragment>\n  );\n};\n\nexport default CourseList;"]},"metadata":{},"sourceType":"module"}