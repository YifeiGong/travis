{"ast":null,"code":"var terms={F:'Fall',W:'Winter',S:'Spring'};var days=['M','Tu','W','Th','F'];var getCourseTerm=function getCourseTerm(course){return terms[course.id.charAt(0)];};var getCourseNumber=function getCourseNumber(course){return course.id.slice(1,4);};var daysOverlap=function daysOverlap(days1,days2){return days.some(function(day){return days1.includes(day)&&days2.includes(day);});};var hoursOverlap=function hoursOverlap(hours1,hours2){return Math.max(hours1.start,hours2.start)<Math.min(hours1.end,hours2.end);};var timeConflict=function timeConflict(course1,course2){return daysOverlap(course1.days,course2.days)&&hoursOverlap(course1.hours,course2.hours);};var courseConflict=function courseConflict(course1,course2){return course1!==course2&&getCourseTerm(course1)===getCourseTerm(course2)&&timeConflict(course1,course2);};var hasConflict=function hasConflict(course,selected){return selected.some(function(selection){return course!==selection&&courseConflict(course,selection);});};var buttonState=function buttonState(selected){return selected?\"success\":null;};export{buttonState,getCourseNumber,getCourseTerm,hasConflict};","map":{"version":3,"sources":["/Users/fayegong/Documents/GitHub/travis/src/components/Course/times.js"],"names":["terms","F","W","S","days","getCourseTerm","course","id","charAt","getCourseNumber","slice","daysOverlap","days1","days2","some","day","includes","hoursOverlap","hours1","hours2","Math","max","start","min","end","timeConflict","course1","course2","hours","courseConflict","hasConflict","selected","selection","buttonState"],"mappings":"AAAA,GAAMA,CAAAA,KAAK,CAAG,CAAEC,CAAC,CAAE,MAAL,CAAaC,CAAC,CAAE,QAAhB,CAA0BC,CAAC,CAAE,QAA7B,CAAd,CACA,GAAMC,CAAAA,IAAI,CAAG,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAAiB,IAAjB,CAAuB,GAAvB,CAAb,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,MAAM,QAC1BN,CAAAA,KAAK,CAACM,MAAM,CAACC,EAAP,CAAUC,MAAV,CAAiB,CAAjB,CAAD,CADqB,EAA5B,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAH,MAAM,QAC5BA,CAAAA,MAAM,CAACC,EAAP,CAAUG,KAAV,CAAgB,CAAhB,CAAmB,CAAnB,CAD4B,EAA9B,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,KAAR,QAClBT,CAAAA,IAAI,CAACU,IAAL,CAAU,SAAAC,GAAG,QAAIH,CAAAA,KAAK,CAACI,QAAN,CAAeD,GAAf,GAAuBF,KAAK,CAACG,QAAN,CAAeD,GAAf,CAA3B,EAAb,CADkB,EAApB,CAIA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAASC,MAAT,QACnBC,CAAAA,IAAI,CAACC,GAAL,CAASH,MAAM,CAACI,KAAhB,CAAuBH,MAAM,CAACG,KAA9B,EAAuCF,IAAI,CAACG,GAAL,CAASL,MAAM,CAACM,GAAhB,CAAqBL,MAAM,CAACK,GAA5B,CADpB,EAArB,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,CAAUC,OAAV,QACnBhB,CAAAA,WAAW,CAACe,OAAO,CAACtB,IAAT,CAAeuB,OAAO,CAACvB,IAAvB,CAAX,EAA2Ca,YAAY,CAACS,OAAO,CAACE,KAAT,CAAgBD,OAAO,CAACC,KAAxB,CADpC,EAArB,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,OAAD,CAAUC,OAAV,QACrBD,CAAAA,OAAO,GAAKC,OAAZ,EACGtB,aAAa,CAACqB,OAAD,CAAb,GAA2BrB,aAAa,CAACsB,OAAD,CAD3C,EAEGF,YAAY,CAACC,OAAD,CAAUC,OAAV,CAHM,EAAvB,CAMA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACxB,MAAD,CAASyB,QAAT,QAClBA,CAAAA,QAAQ,CAACjB,IAAT,CAAc,SAAAkB,SAAS,QAAI1B,CAAAA,MAAM,GAAK0B,SAAX,EAAwBH,cAAc,CAACvB,MAAD,CAAS0B,SAAT,CAA1C,EAAvB,CADkB,EAApB,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAF,QAAQ,QAC1BA,CAAAA,QAAQ,WAAe,IADG,EAA5B,CAIA,OAASE,WAAT,CAAsBxB,eAAtB,CAAuCJ,aAAvC,CAAsDyB,WAAtD","sourcesContent":["const terms = { F: 'Fall', W: 'Winter', S: 'Spring'};\nconst days = ['M', 'Tu', 'W', 'Th', 'F'];\n\nconst getCourseTerm = course => (\n  terms[course.id.charAt(0)]\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1, 4)\n)\n\nconst daysOverlap = (days1, days2) => ( \n  days.some(day => days1.includes(day) && days2.includes(day))\n);\n\nconst hoursOverlap = (hours1, hours2) => (\n  Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end)\n);\n\nconst timeConflict = (course1, course2) => (\n  daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours)\n);\n\nconst courseConflict = (course1, course2) => (\n  course1 !== course2\n  && getCourseTerm(course1) === getCourseTerm(course2)\n  && timeConflict(course1, course2)\n);\n\nconst hasConflict = (course, selected) => (\n  selected.some(selection => course !== selection && courseConflict(course, selection))\n);\n\nconst buttonState = selected => (\n  selected ? `success` : null\n)\n\nexport { buttonState, getCourseNumber, getCourseTerm, hasConflict };"]},"metadata":{},"sourceType":"module"}