{"ast":null,"code":"import _slicedToArray from\"/Users/fayegong/Documents/GitHub/travis/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import\"rbx/index.css\";import{Button}from\"rbx\";import Course from'./Course';var terms={F:'Fall',W:'Winter',S:'Spring'};var getCourseTerm=function getCourseTerm(course){return terms[course.id.charAt(0)];};var buttonState=function buttonState(selected){return selected?\"success\":null;};var TermSelector=function TermSelector(_ref){var state=_ref.state;return React.createElement(Button.Group,{hasAddons:true},Object.values(terms).map(function(value){return React.createElement(Button,{key:value,color:buttonState(value===state.term),onClick:function onClick(){return state.setTerm(value);}},value);}));};var useSelection=function useSelection(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var toggle=function toggle(x){setSelected(selected.includes(x)?selected.filter(function(y){return y!==x;}):[x].concat(selected));};return[selected,toggle];};var CourseList=function CourseList(_ref2){var courses=_ref2.courses;var _useState3=useState('Fall'),_useState4=_slicedToArray(_useState3,2),term=_useState4[0],setTerm=_useState4[1];var _useSelection=useSelection(),_useSelection2=_slicedToArray(_useSelection,2),selected=_useSelection2[0],toggle=_useSelection2[1];var termCourses=courses.filter(function(course){return term===getCourseTerm(course);});return React.createElement(React.Fragment,null,React.createElement(TermSelector,{state:{term:term,setTerm:setTerm}}),React.createElement(Button.Group,null,termCourses.map(function(course){return React.createElement(Course,{key:course.id,course:course,state:{selected:selected,toggle:toggle}});})));};export default CourseList;","map":{"version":3,"sources":["/Users/fayegong/Documents/GitHub/travis/src/components/CourseList.js"],"names":["React","useState","Button","Course","terms","F","W","S","getCourseTerm","course","id","charAt","buttonState","selected","TermSelector","state","Object","values","map","value","term","setTerm","useSelection","setSelected","toggle","x","includes","filter","y","concat","CourseList","courses","termCourses"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,eAAP,CACA,OAASC,MAAT,KAAuB,KAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,CAAEC,CAAC,CAAE,MAAL,CAAaC,CAAC,CAAE,QAAhB,CAA0BC,CAAC,CAAE,QAA7B,CAAd,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,MAAM,QAC1BL,CAAAA,KAAK,CAACK,MAAM,CAACC,EAAP,CAAUC,MAAV,CAAiB,CAAjB,CAAD,CADqB,EAA5B,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,QAAQ,QAC1BA,CAAAA,QAAQ,WAAe,IADG,EAA5B,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,KAAH,MAAGA,KAAH,OACnB,qBAAC,MAAD,CAAQ,KAAR,EAAc,SAAS,KAAvB,EACGC,MAAM,CAACC,MAAP,CAAcb,KAAd,EACEc,GADF,CACM,SAAAC,KAAK,QACR,qBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAb,CACE,KAAK,CAAEP,WAAW,CAACO,KAAK,GAAKJ,KAAK,CAACK,IAAjB,CADpB,CAEE,OAAO,CAAE,yBAAML,CAAAA,KAAK,CAACM,OAAN,CAAcF,KAAd,CAAN,EAFX,EAIGA,KAJH,CADQ,EADX,CADH,CADmB,EAArB,CAeA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,eACOrB,QAAQ,CAAC,EAAD,CADf,wCAClBY,QADkB,eACRU,WADQ,eAEzB,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,CAAD,CAAO,CACpBF,WAAW,CAACV,QAAQ,CAACa,QAAT,CAAkBD,CAAlB,EAAuBZ,QAAQ,CAACc,MAAT,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKH,CAAV,EAAjB,CAAvB,CAAuD,CAACA,CAAD,EAAII,MAAJ,CAAWhB,QAAX,CAAxD,CAAX,CACD,CAFD,CAGA,MAAO,CAAEA,QAAF,CAAYW,MAAZ,CAAP,CACD,CAND,CAQA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,OAAiB,IAAdC,CAAAA,OAAc,OAAdA,OAAc,gBACV9B,QAAQ,CAAC,MAAD,CADE,yCAC3BmB,IAD2B,eACrBC,OADqB,iCAEPC,YAAY,EAFL,gDAE3BT,QAF2B,mBAEjBW,MAFiB,mBAGlC,GAAMQ,CAAAA,WAAW,CAAGD,OAAO,CAACJ,MAAR,CAAe,SAAAlB,MAAM,QAAIW,CAAAA,IAAI,GAAKZ,aAAa,CAACC,MAAD,CAA1B,EAArB,CAApB,CAEA,MACE,qBAAC,KAAD,CAAO,QAAP,MACE,oBAAC,YAAD,EAAc,KAAK,CAAG,CAAEW,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAPA,OAAR,CAAtB,EADF,CAEE,oBAAC,MAAD,CAAQ,KAAR,MACMW,WAAW,CAACd,GAAZ,CAAgB,SAAAT,MAAM,QACtB,qBAAC,MAAD,EAAQ,GAAG,CAAGA,MAAM,CAACC,EAArB,CAA0B,MAAM,CAAGD,MAAnC,CAA4C,KAAK,CAAG,CAAEI,QAAQ,CAARA,QAAF,CAAYW,MAAM,CAANA,MAAZ,CAApD,EADsB,EAAtB,CADN,CAFF,CADF,CASD,CAdD,CAgBA,cAAeM,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport \"rbx/index.css\";\nimport { Button } from \"rbx\";\nimport Course from './Course';\n\nconst terms = { F: 'Fall', W: 'Winter', S: 'Spring'};\n\nconst getCourseTerm = course => (\n  terms[course.id.charAt(0)]\n);\n\nconst buttonState = selected => (\n  selected ? `success` : null\n)\n\nconst TermSelector = ({ state }) => (\n  <Button.Group hasAddons>\n    {Object.values(terms)\n      .map(value =>\n        <Button key={value}\n          color={buttonState(value === state.term)}\n          onClick={() => state.setTerm(value)}\n        >\n          {value}\n        </Button>\n      )\n    }\n  </Button.Group>\n);\n\nconst useSelection = () => {\n  const [selected, setSelected] = useState([]);\n  const toggle = (x) => {\n    setSelected(selected.includes(x) ? selected.filter(y => y !== x) : [x].concat(selected))\n  };\n  return [ selected, toggle ];\n};\n\nconst CourseList = ({ courses }) => {\n  const [term, setTerm] = useState('Fall');\n  const [selected, toggle] = useSelection();\n  const termCourses = courses.filter(course => term === getCourseTerm(course));\n  \n  return (\n    <React.Fragment>\n      <TermSelector state={ { term, setTerm } } />\n      <Button.Group>\n          { termCourses.map(course =>\n            <Course key={ course.id } course={ course } state={ { selected, toggle } } />) }\n      </Button.Group>\n    </React.Fragment>\n  );\n};\n\nexport default CourseList;"]},"metadata":{},"sourceType":"module"}