{"ast":null,"code":"const terms = {\n  F: 'Fall',\n  W: 'Winter',\n  S: 'Spring'\n};\nconst days = ['M', 'Tu', 'W', 'Th', 'F'];\n\nconst getCourseTerm = course => terms[course.id.charAt(0)];\n\nconst getCourseNumber = course => course.id.slice(1, 4);\n\nconst daysOverlap = (days1, days2) => days.some(day => days1.includes(day) && days2.includes(day));\n\nconst hoursOverlap = (hours1, hours2) => Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end);\n\nconst timeConflict = (course1, course2) => daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours);\n\nconst courseConflict = (course1, course2) => course1 !== course2 && getCourseTerm(course1) === getCourseTerm(course2) && timeConflict(course1, course2);\n\nconst hasConflict = (course, selected) => selected.some(selection => course !== selection && courseConflict(course, selection));\n\nconst buttonState = selected => selected ? \"success\" : null;\n\nexport { buttonState, getCourseNumber, getCourseTerm, hasConflict };","map":{"version":3,"sources":["/Users/fayegong/Documents/GitHub/travis/src/components/Course/times.js"],"names":["terms","F","W","S","days","getCourseTerm","course","id","charAt","getCourseNumber","slice","daysOverlap","days1","days2","some","day","includes","hoursOverlap","hours1","hours2","Math","max","start","min","end","timeConflict","course1","course2","hours","courseConflict","hasConflict","selected","selection","buttonState"],"mappings":"AAAA,MAAMA,KAAK,GAAG;AAAEC,EAAAA,CAAC,EAAE,MAAL;AAAaC,EAAAA,CAAC,EAAE,QAAhB;AAA0BC,EAAAA,CAAC,EAAE;AAA7B,CAAd;AACA,MAAMC,IAAI,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,CAAb;;AAEA,MAAMC,aAAa,GAAGC,MAAM,IAC1BN,KAAK,CAACM,MAAM,CAACC,EAAP,CAAUC,MAAV,CAAiB,CAAjB,CAAD,CADP;;AAIA,MAAMC,eAAe,GAAGH,MAAM,IAC5BA,MAAM,CAACC,EAAP,CAAUG,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CADF;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,KAClBT,IAAI,CAACU,IAAL,CAAUC,GAAG,IAAIH,KAAK,CAACI,QAAN,CAAeD,GAAf,KAAuBF,KAAK,CAACG,QAAN,CAAeD,GAAf,CAAxC,CADF;;AAIA,MAAME,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,KACnBC,IAAI,CAACC,GAAL,CAASH,MAAM,CAACI,KAAhB,EAAuBH,MAAM,CAACG,KAA9B,IAAuCF,IAAI,CAACG,GAAL,CAASL,MAAM,CAACM,GAAhB,EAAqBL,MAAM,CAACK,GAA5B,CADzC;;AAIA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,OAAV,KACnBhB,WAAW,CAACe,OAAO,CAACtB,IAAT,EAAeuB,OAAO,CAACvB,IAAvB,CAAX,IAA2Ca,YAAY,CAACS,OAAO,CAACE,KAAT,EAAgBD,OAAO,CAACC,KAAxB,CADzD;;AAIA,MAAMC,cAAc,GAAG,CAACH,OAAD,EAAUC,OAAV,KACrBD,OAAO,KAAKC,OAAZ,IACGtB,aAAa,CAACqB,OAAD,CAAb,KAA2BrB,aAAa,CAACsB,OAAD,CAD3C,IAEGF,YAAY,CAACC,OAAD,EAAUC,OAAV,CAHjB;;AAMA,MAAMG,WAAW,GAAG,CAACxB,MAAD,EAASyB,QAAT,KAClBA,QAAQ,CAACjB,IAAT,CAAckB,SAAS,IAAI1B,MAAM,KAAK0B,SAAX,IAAwBH,cAAc,CAACvB,MAAD,EAAS0B,SAAT,CAAjE,CADF;;AAIA,MAAMC,WAAW,GAAGF,QAAQ,IAC1BA,QAAQ,eAAe,IADzB;;AAIA,SAASE,WAAT,EAAsBxB,eAAtB,EAAuCJ,aAAvC,EAAsDyB,WAAtD","sourcesContent":["const terms = { F: 'Fall', W: 'Winter', S: 'Spring'};\nconst days = ['M', 'Tu', 'W', 'Th', 'F'];\n\nconst getCourseTerm = course => (\n  terms[course.id.charAt(0)]\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1, 4)\n)\n\nconst daysOverlap = (days1, days2) => ( \n  days.some(day => days1.includes(day) && days2.includes(day))\n);\n\nconst hoursOverlap = (hours1, hours2) => (\n  Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end)\n);\n\nconst timeConflict = (course1, course2) => (\n  daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours)\n);\n\nconst courseConflict = (course1, course2) => (\n  course1 !== course2\n  && getCourseTerm(course1) === getCourseTerm(course2)\n  && timeConflict(course1, course2)\n);\n\nconst hasConflict = (course, selected) => (\n  selected.some(selection => course !== selection && courseConflict(course, selection))\n);\n\nconst buttonState = selected => (\n  selected ? `success` : null\n)\n\nexport { buttonState, getCourseNumber, getCourseTerm, hasConflict };"]},"metadata":{},"sourceType":"module"}